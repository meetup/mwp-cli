name: ci

on:
  push:
    branches: master
  pull_request:
    branches: master

jobs:
  build_publish:
    name: Build and publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '10'
          check-latest: true
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v3.0.1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Run build
        run: |
          yarn install --frozen-lockfile
      - name: Prep to publish
        run: npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
        env:
          CI: true
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Release ${{ github.run_number }}-beta
        if: github.event_name == 'pull_request'
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 2
          max_attempts: 3
          command: |
            export GIT_TAG=$(make version)-beta
            export NPM_TAG=beta
            git config --global user.email "revenue-guardians@meetup.com"
            git config --global user.name "meetcvs"
            npm version $GIT_TAG -m "Version $GIT_TAG built by Github action"
            npm publish --tag $NPM_TAG
        env:
          CI_BUILD_NUMBER: ${{ github.run_number }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Release ${{ github.run_number }}
        if: github.ref == 'refs/heads/master'
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 2
          max_attempts: 3
          command: |
            export GIT_TAG=$(make version)
            export NPM_TAG=latest
            git config --global user.email "revenue-guardians@meetup.com"
            git config --global user.name "meetcvs"
            npm version $GIT_TAG -m "Version $GIT_TAG built by Github action"
            npm publish --tag $NPM_TAG
        env:
          CI_BUILD_NUMBER: ${{ github.run_number }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
